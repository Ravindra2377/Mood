# SOUL — Railway Production Environment Variables (example)
# Copy this into your Railway project environment (Production) and fill in all required values.
# For Staging, you can use the same file with DEV_MODE=true and different domains/credentials.

# ------------------------------------------------------------------------------
# Core (Required)
# ------------------------------------------------------------------------------
# Strong random secret key (32+ chars). Changing this will invalidate all JWTs.
SECRET_KEY=CHANGE_ME_TO_A_LONG_RANDOM_SECRET

# PostgreSQL connection string provided by Railway Postgres plugin.
# Format: postgresql+psycopg2://USER:PASSWORD@HOST:PORT/DBNAME
DATABASE_URL=postgresql+psycopg2://mh_user:mh_pass@db:5432/mh_db

# Redis connection URL provided by Railway Redis plugin (used for rate limiting).
# Format: redis://[:PASSWORD@]HOST:PORT/DB_INDEX
REDIS_URL=redis://redis:6379/0

# Explicitly disable any dev-only behaviors in production.
DEV_MODE=false

# Comma-separated list of allowed origins for browser clients.
# Include your web app origin(s) here. Do not use wildcard in production.
# Example if your web app is hosted at https://app.soulapp.app:
CORS_ORIGINS=https://app.soulapp.app

# Access token TTL (minutes). 15–30 recommended in production.
ACCESS_TOKEN_EXPIRE_MINUTES=30

# The port your API process listens on (Railway usually injects PORT automatically).
PORT=8000


# ------------------------------------------------------------------------------
# Twilio Verify (Production SMS OTP)
# ------------------------------------------------------------------------------
# Twilio Account SID (starts with AC...)
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Twilio Auth Token
TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Twilio Verify Service SID (starts with VA...)
TWILIO_VERIFY_SERVICE_SID=VAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


# ------------------------------------------------------------------------------
# Email (Optional — used for password reset and notifications)
# ------------------------------------------------------------------------------
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
EMAIL_FROM=no-reply@soulapp.app

# In production, keep false so emails are actually sent (not just previewed).
DEV_EMAIL_PREVIEW=false

# Escalation email for crisis alerts (optional)
ESCALATION_EMAIL=alerts@soulapp.app


# ------------------------------------------------------------------------------
# Security & Privacy (Optional)
# ------------------------------------------------------------------------------
# Optional encryption key (Fernet urlsafe base64). If set, sensitive fields may be encrypted at rest.
# Example key format: b1b2b3... (urlsafe base64, 32 bytes)
DATA_ENCRYPTION_KEY=

# Optional data retention policy (days). If set, background retention job may purge old data.
DATA_RETENTION_DAYS=


# ------------------------------------------------------------------------------
# Feature Flags & Service Tunables (Optional)
# ------------------------------------------------------------------------------
# Rewards can be restricted to admins only.
REQUIRE_ADMIN_FOR_REWARDS=false

# Community member email visibility: 'full' | 'masked' | 'hidden'
COMMUNITY_MEMBER_EMAIL_POLICY=hidden

# ML-based detector flags (only enable if models and dependencies are ready)
USE_MODEL_DETECTOR=false
DETECTOR_MODEL_NAME=distilbert-base-uncased-finetuned-sst-2-english

# Background worker controls (for async tasks/analytics)
ENABLE_BACKGROUND_WORKER=true
BACKGROUND_WORKER_POLL_SECONDS=1
BACKGROUND_TASK_MAX_RETRIES=3


# ------------------------------------------------------------------------------
# Observability (Optional)
# ------------------------------------------------------------------------------
# Sentry DSN for error tracking (leave empty to disable)
SENTRY_DSN=

# Log level for your application stack if supported (info, warn, error)
LOG_LEVEL=warn


# ------------------------------------------------------------------------------
# Notes
# ------------------------------------------------------------------------------
# 1) After setting these env vars in Railway:
#    - Connect Postgres and Redis plugins and copy their URLs here (or use service variables).
#    - Ensure DNS and custom domains are configured for your Caddy reverse proxy service.
# 2) For Staging:
#    - Consider DEV_MODE=true to use OTP preview instead of real SMS, or configure separate Twilio credentials.
#    - Use a different CORS_ORIGINS (e.g., https://staging.soulapp.app).
# 3) Rate Limiting:
#    - Providing REDIS_URL enables distributed rate limits via SlowAPI storage.
#    - Without REDIS_URL, in-memory limits apply per instance only.
# 4) CORS:
#    - Ensure your FastAPI app reads and applies CORS_ORIGINS from this variable.
#    - Do not use "*" in production.
