# SOUL — Railway Staging Environment (.env.staging.example)
# Copy these into your Railway "api" service Environment Variables for the staging project.
# Notes:
# - Values on the right are examples. Replace <placeholders> with your real values.
# - Staging is configured to use DEV_MODE=true so OTP uses the preview code (123456) unless Twilio is fully configured.

# ------------------------------------------------------------------------------
# Application identity
# ------------------------------------------------------------------------------
APP_ENV=staging
SECRET_KEY=<generate-a-strong-64+char-secret>   # required; rotate if leaked
PORT=8000                                       # Gunicorn binds to this port inside the container

# ------------------------------------------------------------------------------
# Database and cache (provided by Railway plugins)
# ------------------------------------------------------------------------------
# Add the PostgreSQL and Redis plugins to the staging project, then copy their URLs here.
DATABASE_URL=<railway-postgres-url>             # e.g., postgresql+psycopg2://USER:PASSWORD@HOST:PORT/DBNAME
REDIS_URL=<railway-redis-url>                   # e.g., redis://HOST:PORT/0

# ------------------------------------------------------------------------------
# Auth / Tokens
# ------------------------------------------------------------------------------
ACCESS_TOKEN_EXPIRE_MINUTES=30                  # 15–30 recommended
# Refresh token TTL is persisted in DB; rotation handled by backend

# ------------------------------------------------------------------------------
# OTP (Twilio Verify) — Staging uses dev fallback by default
# Set DEV_MODE=true and leave Twilio vars empty to enable preview OTP (123456).
# To test with real SMS on staging, set DEV_MODE=false and fill in Twilio credentials below.
# ------------------------------------------------------------------------------
DEV_MODE=true
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_VERIFY_SERVICE_SID=

# ------------------------------------------------------------------------------
# CORS (comma-separated list). Include only allowed client origins.
# Backends currently allow all in code; plan to wire this var to FastAPI soon.
# ------------------------------------------------------------------------------
CORS_ORIGINS=https://staging.soulapp.app,http://localhost:3000,capacitor://localhost,ionic://localhost

# ------------------------------------------------------------------------------
# Email (staging-friendly defaults)
# ------------------------------------------------------------------------------
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=
SMTP_PASSWORD=
EMAIL_FROM=no-reply@soulapp.app
DEV_EMAIL_PREVIEW=true                            # true => responses may include email previews in staging

# ------------------------------------------------------------------------------
# Background workers / schedulers
# ------------------------------------------------------------------------------
ENABLE_BACKGROUND_WORKER=true
BACKGROUND_WORKER_POLL_SECONDS=1
BACKGROUND_TASK_MAX_RETRIES=3

# ------------------------------------------------------------------------------
# Optional security and privacy
# ------------------------------------------------------------------------------
# Provide a Fernet key (urlsafe base64) to encrypt sensitive fields at rest.
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
DATA_ENCRYPTION_KEY=
DATA_RETENTION_DAYS=                              # e.g., 365 (omit/empty to disable auto-deletion policy)
ESCALATION_EMAIL=alerts@soulapp.app

# ------------------------------------------------------------------------------
# i18n / features (safe defaults)
# ------------------------------------------------------------------------------
REQUIRE_ADMIN_FOR_REWARDS=false
COMMUNITY_MEMBER_EMAIL_POLICY=hidden              # full | masked | hidden

# ------------------------------------------------------------------------------
# Logging / Observability
# ------------------------------------------------------------------------------
LOG_LEVEL=info
SENTRY_DSN=                                       # optional: add if you enable Sentry in staging

# ------------------------------------------------------------------------------
# Gunicorn tuning overrides (optional — defaults are set in gunicorn_conf.py)
# ------------------------------------------------------------------------------
GUNICORN_WORKERS=3
GUNICORN_TIMEOUT=90
GUNICORN_KEEPALIVE=5
